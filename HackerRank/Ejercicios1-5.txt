EJERCICIO 1


import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {



    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int N = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        scanner.close();
        
        if (N % 2 == 0 && N >= 2 && N <= 5) { //2-5
         System.out.println("Not Weird");
}       else if (N % 2 != 0) { //odd
         System.out.println("Weird");
}       else if (N % 2 == 0 && N >= 6 && N <= 20) { //6-20
        System.out.println("Weird");
}       else if (N % 2 == 0 && N > 20){ // +20
        System.out.println("Not Weird");
}
    }
}


EJERCICIO 2


import java.util.*;
import java.io.*;

class Solution{
    public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        int sum = 0;
        int t=in.nextInt();
        for(int i=0;i<t;i++){
            int a = in.nextInt();
            int b = in.nextInt();
            int n = in.nextInt();
            if( (n>=1&&n<=15) && (a>=0&&a<=50) && (b>=0&&b<=50) ){
           int j=0;
           while(j<n){
                int s = (int)Math.pow(2,j)*b;
                sum = sum+s;
                int ss = sum+a;            
                System.out.print(ss + " ");
                j++;
            }
         sum = 0;
         int ss = 0;
            }
             System.out.println("");
        }
        in.close();
    }
}




EJERCICIO 3


import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    static void plusMinus(int[] arr) {
        float p=0;
        float n=0;
        float z=0;
        for(int i=0;i<arr.length;i++){
            if(arr[i] == 0){
                z++;
            }
            else{
                if(arr[i] > 0){
                    p++;
                }
                else{
                    n++;
                }
            }
        }
        p/= arr.length;
        n/= arr.length;
        z/= arr.length;
        System.out.println(p);
        System.out.println(n);
        System.out.println(z);
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        plusMinus(arr);

        scanner.close();
    }
}

EJERCICIO 4

import static java.lang.System.in;
class Prime{
    boolean chk(int n){
        if(n<2)return false;
        for(int i=2;i*i<=n;i++)if(n%i==0)return false;
        return true;
    }
    void checkPrime(Integer... a){
        boolean f=false;
        for(int i=0;i<a.length;i++){
            if(chk(a[i])){
                if(f)java.lang.System.out.print(" ");
                f=true;
                java.lang.System.out.print(a[i]);
            }
        }
        java.lang.System.out.println();
    }
}

EJERCICIO 5

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        Map<String,String> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            String name = scanner.nextLine();
            String phone = scanner.nextLine();
            map.put(name, phone);
        }
        while (scanner.hasNextLine()) {
            String query = scanner.nextLine();
            if (map.containsKey(query)) {
                System.out.println(query + "=" + map.get(query));
            } else {
                System.out.println("Not found");
            }
        }
    }
}