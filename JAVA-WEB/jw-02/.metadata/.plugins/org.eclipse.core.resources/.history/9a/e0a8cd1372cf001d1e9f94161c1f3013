package com.generation.ecommerce.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.generation.ecommerce.model.Producto;
import com.generation.ecommerce.repositories.ProductoRepository;

@Service

//inyeccion de dependencias y operaciones crud
public class ProductoService {
    
    //Autowired, permite recibir las dependencias que necesitan en lugar de crearlas ellas mismas
    //Dependencia entre clases
    //Instanciar cliente a trav√©s del constructor
    //Getters y setters para modificar info, no solo para acceder
    
    //te creo, te conecto/cableo, te utilizo
    private final ProductoRepository productoRepository;
    
    //Cablear autowired
    @Autowired
    public ProductoService(ProductoRepository productoRepository) {
        this.productoRepository = productoRepository;
    }
    
    //Create (Metodo para agregar un objeto del tipo Producto y guardarlo en la base de datos. Si el producto existe, no deberia actualizar la Base de datos porque seria un objeto duplicado.
    
    public void crearProducto(Producto prod) { //objeto del tipo producto
        Optional<Producto> productoBuscado = 
                productoRepository.findByNombre(prod.getNombre());
        if (productoBuscado.isPresent()) {
            throw new IllegalStateException("El producto con el nombre "
                    + "[" + prod.getNombre() + "] ya existe.");
        } else {
            productoRepository.save(prod);
        }//else //if 
    }//addProducto
    
    //Read leer una lista de productos
    public List<Producto> leerProductos() {
        return productoRepository.findAll();
    }
    
  //Read (leer un producto con un id especifico)
    public Producto getProducto(Long prodId) {
        return productoRepository.findById(prodId).
                orElseThrow(()-> new IllegalStateException("El Producto "
                        + "con el id " + prodId + " no existe.") );
    }//getProducto
    
    
    //Update
    public void actualizarProducto() {
        
   
    }
    
    //Delete
    public void borrarProducto() {
        
    }
}